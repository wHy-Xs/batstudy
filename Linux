Linux常用指令详解：
1.sz命令是利用ZModem协议来从Linux服务器传送文件到本地，一次可以传送一个或多个文件，rz命令是从本地上传文件到Linux服务器。
  eg:rz -be 从windows将文件上传到linux
          -a 以文本方式传输（ascii）。
          -b 以二进制方式传输（binary）。
          -e 对控制字符转义（escape），这可以保证文件传输正确。
2.压缩解压缩文件指令  
  eg：tar -zxvf 解压缩
      tar -zcvf 压缩
            -c: 建立压缩档案
            -x：解压
            -t：查看内容
            -r：向压缩归档文件末尾追加文件
            -u：更新原压缩包中的文件
            压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。
            -z：有gzip属性的
3.mv移动指令,rm -rf 删除指令，history查看历史指令，hostname -i 查看本机ip，pwd查看路径，cd到指定文件下，ll,ls显
  head 默认显示头10条,tail -f 默认显示尾10条
4.cat指令
5.wc指令
  eg:wc -l(行数) -w(单词数) -m(字节数)
5.grep
6.sort
7.cut
8.split -l file 按行分割两个文件
9.sed
10.uniq
11.du -sh * 查看内存
12.more当所查看的文本文件内容非常多时，用cat是不合适的，此时可以用more一页一页显示。
13.less相当于对more的改进，用less指令可以进行一定的搜索
14.find命令find chengji/ -name nihao 就会在chengji目录下搜索名字为nihao的文件
15.whatis可以大致了解这个命令是干什么用的eg:whatis cat
16.本地复制cp,运程机器赋值scp命令
17.df查看内存使用情况
18.dd命令
19.ps监视进程指令
20.top及时的跟踪进程信息
6.
命令行方式
awk [-F  field-separator]  'commands'  input-file(s)
  通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。
awk工作流程是这样的：读入有'\n'换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。
                    默认域分隔符是"空白键" 或 "[tab]键",所以$1表示登录用户，$3表示登录用户ip,以此类推。

1.awk
  eg:awk '{print $1, $4}' netstat.txt 注意，其只能被单引号包含。其中的$1..$n表示第几例。注：$0表示整个行。
  eg:awk '{printf "%-8s %-8s %-8s %-18s %-22s %-15s\n",$1,$2,$3,$4,$5,$6}' netstat.txt awk的格式化输出
##################################################################################################################
>  输出重定向标识：如果文件已经存在，会删除文件中原有的内容，然后用新内容代替
>> 这个符号是追加
<  输入重定向标识
<< 这个是立即文档eg:cat<<nihao,则会立刻进入输入模式，只有当你输入nihao时，才会把你之前输入的内容输出。
| 管道：管道命令是将左边命令的输出作为右边的输入，依次类推。
################################################################################################################## 
文件权限
###########################################################################################################
vi常用操作：
1.gg 到最顶部
2.shift+g 到最底部
3.shift+3 标记出所有当前单词
4.0 跳转到本行开始
5.shift+4 跳转到本行末尾
6./搜索 ？反方向搜索 n/N
7.dd删除正行
8.x删除一个字符
9.:args 显示当前文件名字
10.:set number 显示行号 set nonumber 解除行号 set enc=utf8 编码
11.:vert diffsplit file 查看两个相同文件的不同之处
12.:sp file 水平分割 vsp file 垂直分割  ctrl+w 切换不同屏幕
13.:shell 从vi切换到shell命令行 exit:从shell命令行回到vi
14.ctrl+z将vi切到后台 fg将后台的调到前台 bg看后台运行 jobs看后台运行了哪些程序
15.ctrl+r 搜索以前用过的指令 
16.ctrl+a 跳到命令行开头 ctrl+e跳到命令行结尾
17.ZZ退出保存
18.J将下一行连到上一行
19.H跳到第一行
20.大面积注释
    第一步ctrl+v 第二步选中区域 第三步大写I并输入 第四步连按两下ESC
21.大面积删除
    第一步ctrl+v 第二步选中区域 第三步dd/x
########################################################################################################################
linux中的文件目录管理
    /bin：存放最常用命令； 
　　/boot：启动Linux的核心文件；
　　/dev：设备文件；
　　/etc：存放各种配置文件；
　　/home：用户主目录；
　　/lib：系统最基本的动态链接共享库；
　　/mnt：一般是空的，用来临时挂载别的文件系统；
　　/proc：虚拟目录，是内存的映射；
　　/sbin：系统管理员命令存放目录；
　　/usr：最大的目录，存许应用程序和文件；
　　/usr/X11R6：X-Window目录；
　　/usr/src：Linux源代码；
　　/usr/include：系统头文件；
　　/usr/lib：存放常用动态链接共享库、静态档案库；
　　/usr/bin、/usr/sbin：这是对/bin、/sbin的一个补充；
########################################################################################################################
  swap是交换分区。这是一块特殊的硬盘空间。当实际内容不够用的情况下，操作系统会从内存中取出一部分暂时不用的数据，放在交换区中，从而为
  程序的运行腾出足够的空间。
  gdb调试命令
#######################################################################################################################
常用shell命令

    常用shell命令
        常用shell命令
            文件和目录操作命令
                ls(显示文件和目录的信息)
                cd(改名目录)
                cp(copy文件)
                rm(删除文件或目录)
                mv命令(将文件移动走，或者改名)
                diff(比较文件内容)
                ln命令(建立链接, 一般常用软链接)
                pwd（显示当前所在目录）
                mkdir (创建目录)
                rmdir(删除空的目录)
                chgrp (改变文件的所属的组)
                find(列出符合参数要求的文件)
                locate(让使用者可以很快速的搜寻档案系统内是否有指定的档案)
            文件处理
                cat(显示文件内容)
                more/less(均为分页显示命令)
                tail 命令(显示文件的最后几行)
                vi命令
                touch命令(创建一个空文件)
                wc(显示文件信息)
                chmod(更改文件权限)
                chown(更改文件所有者)
                head(显示文件头部内容)
                cut (显示每行开头的字符)
                sleep (将当前动作延迟一段时间)
                expr(字符串处理命令)
                split (将一个档案分割成数个)
            系统相关
                date(显示时间)
                df(显示磁盘使用情况)
                free(显示内存使用情况)
                du(显示文件或者目录的大小)
                top(显示系统状态, 例如cpu, 进程等情况)
                vmstat(显示系统状态)
                su(切换用户)
                ps (显示当前的进程)
                pstree(显示树状进程使用)
                kill(杀死进程: kill -9 进程号)
                netstat(查看网络使用情况)
                ssh(登陆到其他机器)
                scp(机器之间拷贝文件)
                wget(ftp下载)
                man、info (线手册命令)
                alias (别名)
                unalias (消别名)
                passwd (更改使用者的密码)
                who(显示有哪些用户登录到系统中)
                whoami(显示当前用户是谁)
                at(指定在某个特定时刻执行某个程序或指令)
                crontab （在固定时间或固定间隔执行）
            其他命令
                if 条件判断
                hostname
                nohup(在后台启动程序)
                screen(在后台启动程序)
                rz/sz(在windows机器和测试机器之间进行文件上传和下载, securecrt提供)
        命令进阶
            echo
            sed
            grep
            awk
       

常用shell命令

文件和目录操作命令
ls(显示文件和目录的信息)

ls　以默认方式显示当前目录文件列表

ls -a 显示所有文件包括隐藏文件

ls -l 显示文件属性，包括大小，日期，符号连接，是否可读写及是否可执行

ls -lh 显示文件的大小，以容易理解的格式印出文件大小 (例如 1K 234M 2G)

ls -lt 显示文件，按照修改时间排序

cd(改名目录)

cd dir　切换到当前目录下的dir目录

cd /　切换到根目录

cd ..　切换到到上一级目录

cd ../..　切换到上二级目录

cd ~　切换到用户目录，比如是root用户，则切换到/root下

cp(copy文件)

cp source target　将文件source复制为target

cp /root/source .　将/root下的文件source复制到当前目录

cp –av soure_dir target_dir　将整个目录复制，两目录完全一样

rm(删除文件或目录)

rm file　删除某一个文件

rm -f file 删除时候不进行提示。可以于r参数配合使用

rm -rf dir　删除当前目录下叫dir的整个目录

mv命令(将文件移动走，或者改名)

mv source target　将文件source更名为target

diff(比较文件内容)

diff dir1 dir2　比较目录1与目录2的文件列表是否相同，但不比较文件的实际内容，不同则列出

diff -r dir1 dir2 比较目录1与目录2的所有文件及内容

diff file1 file2　比较文件1与文件2的内容是否相同，如果是文本格式的文件，则将不相同的内容显示，如果是二进制代码则只表示两个文件是不同的

comm file1 file2　比较文件，显示两个文件不相同的内容

ln命令(建立链接, 一般常用软链接)

ln source_path target_path 硬连接

ln -s source_path target_path 软连接

pwd（显示当前所在目录）
mkdir (创建目录)

mkdir AAA 在当前目录下创建一子目录，名为 AAA

rmdir(删除空的目录)

rmdir AAA : 将当前目录下，名为 AAA 的子目录删除

rmdir -p BBB/Test : 在当前目录下的 BBB 目录中，删除名为 Test 的子目录。若Test 删除后，BBB 目录成为空目录，则 BBB 亦予删除。

chgrp (改变文件的所属的组)

chgrp users file1.txt :将文件 file1.txt 的所属组设为 users 组

chgrp -R bin * : 将当前目录下的所有文件与子目录（包括子目录下的文件）都设为 bin 组。

find(列出符合参数要求的文件)

find [path...] [expression] : 将符合 expression 的文件列出来。

-amin n : 在过去 n 分钟内被读取过的文件

-anewer file : 比文件 file 更晚被读取过的文件

-atime n : 在过去 n 天被读取过的文件

-cmin n : 在过去 n 分钟内被修改过的文件

-cnewer file :比文件 file 更新的文件

-ctime n : 在过去 n 天过修改过的文件

-name filename, -iname filename : 符合 filename 的文件。iname 会忽略大小写

-size n : 档案大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k表示 kilo bytes，w 是二个位元组。-type c : 档案类型是 c 的档案。

find . -name "*.c" 将当前目录及其子目录下所有扩展名是 c 的文件列出来。

find . -cmin -20将当前目录及其子目录下所有最近 20 分钟内更新过的文件列出

locate(让使用者可以很快速的搜寻档案系统内是否有指定的档案)

locate [-q] [-d ] [--database=]

locate [-r ] [--regexp=]

locate [-qv] [-o ] [--output=]

locate [-Vh] [--version] [--help]

说明： locate 让使用者可以很快速的搜寻档案系统内是否有指定的档案。其方法是先建立一个包括系统内所有档案名称及路径的资料库，之后当寻找时就只需查询这个资料库，而不必实际深入档案系统之中了。在一般的 distribution 之中，资料库的建立都被放在 contab 中自动执行。一般使用者在使用时只要用

# locate your_file_name 的型式就可以了。

参数： -n 至多显示n 个输出。

范例：

1. locate chdrv : 寻找所有叫 chdrv 的档案。

2. locate -n 100 a.out : 寻找所有叫 a.out 的档案，但最多只显示 100 个。

文件处理

cat(显示文件内容)

more/less(均为分页显示命令)

more　file

less -N file 显示内容, 并在前面标出行号

它们也能用于管道命令之后, 例如 ps aux | less

tail 命令(显示文件的最后几行)

tail -n 100 aaa.txt 显示文件aaa.txt文件的最后100行

tail -f x.txt 动态显示x.txt的末尾几行, 即日志滚动时自动刷新

vi命令

vi file　编辑文件file

vi 原基本使用及命令：

输入命令的方式为先按[ESC]键，然后输入:w(写入文件),:w!(不询问方式写入文件）,:wq保存并退出,:q退出,q!不保存退出

常用vi -d a.txt b.txt 进行文件比较， [c 跳转到上一修改处，]c跳转到下一修改处

touch命令(创建一个空文件)

touch aaa.txt 创建一个空文件，文件名为aaa.txt

wc(显示文件信息)

例如wc -l *表示查看文件的行数

chmod(更改文件权限)

chown(更改文件所有者)

head(显示文件头部内容)

head [-n|c num] filename 没有参数时，显示最前10行

参数： -n num 显示最前num行

-c num显示最前num 字符

cut (显示每行开头的字符)

cut -cnum1-num2 filename 显示每行从开头算起第 num1 到 num2 的字符。

cut -c0-6 example 显示每行开头算起前 6 个字符。

sleep (将当前动作延迟一段时间)

格式 : sleep [--help] [--version] number[smhd]

说明 : sleep 可以用来将当前动作延迟一段时间

参数 : --help : 显示辅助讯息

--version : 显示版本编号

number : 时间长度，后面可接 s、m、h 或 d, 其中 s 为秒，m 为 分钟，h 为小时，d 为日数

范例 :

    显示当前时间后延迟 1 分钟，之后再次显示时间 : date;sleep 1m;date

expr(字符串处理命令)

格式： expr [option] expresion

范例：

    求字串长度: expr length "this is a test"

14

    数字运算 : expr 14 +[-*/%] 9

23[5、126、1、5]

    从位置处抓取字串 : expr substr "this is a test" 3 5

is is

    字符串首次出现的索引值 : expr index "testforthegame" e

    字串真实重现 : expr quote thisisatestformela

thisisatestformela

split (将一个档案分割成数个)

格式：split [OPTION] [INPUT [PREFIX]]

说明：将一个档案分割成数个。而从 INPUT 分割输出成固定大小的档案，其档名依序为PREFIXaa, PREFIXab...；PREFIX 预设值为 `x。若没有 INPUT 档或为 `-，则从标准输入读进资料。

参数： -b, --bytes=SIZE

-b, --bytes=SIZE SIZE 值为每一输出档案的大小，单位为 byte。

-C, --line-bytes=SIZE 每一输出档中，单行的最大 byte 数。

-l, --lines=NUMBER NUMBER 值为每一输出档的列数大小。

-NUMBER 与 -l NUMBER 相同。

--verbose 于每个输出档被开启前，列印出侦错资讯到标准错误输出。

--help 显示辅助资讯然后离开。

--version 列出版本资讯然后离开。

SIZE 可加入单位: b 代表 512， k 代表 1K， m 代表 1 Meg。

范例：

1. PostgresSQL 大型资料库备份与回存：

因 Postgres 允许表格大过你系统档案的最大容量，所以要将表格 dump 到单一的档案可能会有问题，使用 split进行档案分割。

% pg_dump dbname | split -b 1m - filename.dump.

重新载入

% createdb dbname

% cat filename.dump.* | pgsql dbname

% cat filename.dump.* | pgsql dbname

系统相关

date(显示时间)

df(显示磁盘使用情况)

可加-h参数, 显示human-readable的信息; -i参数, 表示显示inode使用情况

free(显示内存使用情况)

du(显示文件或者目录的大小)

一般可使用 du -hs *的形式

top(显示系统状态, 例如cpu, 进程等情况)

vmstat(显示系统状态)

可加-n参数动态刷新, 进行性能测试时可以使用类似的有iostat, 可以显示io的使用状态; 外部命令sar, 可以显示之前一段时间的系统状态

su(切换用户)

ps (显示当前的进程)

常用ps aux | grep "进程名"

pstree(显示树状进程使用)

常用pstree work, 查看work帐户的进程使用

kill(杀死进程: kill -9 进程号)

更多地, 我们使用killall -9 进程名称

netstat(查看网络使用情况)

常用netstat -nltp查看端口占用情况

ssh(登陆到其他机器)

需要输入密码, 也可以先建立信任关系: http://www.oklinux.cn/html/network/ser/20080907/60717.html
或者使用批量信任关系工具: http://wiki.babel.baidu.com/twiki/bin/view/Com/Test/Pf_smartssh
或者在安装了shell-lib的机器上使用"go"命令: http://wiki.babel.baidu.com/twiki/bin/view/Com/Test/ShellLib库使用规范#go使用方法

scp(机器之间拷贝文件)

-r参数表示是文件夹
常用: 从其他机器拷贝到本地机器: scp [-r] 远程机器名:远程路径名 本地路径
从本地机器推送到其他机器: scp [-r] 本地路径 远程机器名:远程路径名
和ssh相同, 需要建立信任关系, 或者在安装了shell-lib的机器上使用pscp命令: http://wiki.babel.baidu.com/twiki/bin/view/Com/Test/ShellLib库使用规范#pscp使用方法

wget(ftp下载)

wget常用的方式为wget ftp://xxxx
wget有很多有效的参数, 常用的包括-r获取文件夹, -nH不建立hostname的文件夹, --cut-dirs=数字表示对父目录进行截断(否则可能下载到的是home/work/xxx这样的一个若干层级目录), -P下载的本地位置, -q不显示debug信息等, 具体的可以man wget获得

man、info (线手册命令)

格式：man command 范例：man cat [info cat]
alias (别名)

alias aaa=“ls –l” 设置“ls –l”的别名为 aaa
unalias (消别名)

unalias aaa 取消aaa的别名
passwd (更改使用者的密码)

passwd -l xxx 锁定账户: xxx ，使他不能登录 passwd -u lijiangong 解除锁定: passwd -x10 -n3 -w2 -i5 lijiangong 设定密码有效期: 即：3天之后才能更改密码、10天之后必须更改密码、第八天提醒修改密码、 密码失效5天之后账户失效
who(显示有哪些用户登录到系统中)

who - [husfV] [user] : 显示有哪些用户登录到系统中，显示的信息包含用户ID，使用的终端，上线时间，呆滞时间，CPU使用量，动作等等。
whoami(显示当前用户是谁)
at(指定在某个特定时刻执行某个程序或指令)

格式： at TIME command 说明 : 指定在 TIME 这个特定时刻执行某个程序或指令，TIME 的格式 是 HH:MM，其中的 HH 为小时，MM 为分钟，甚至你也可以指定 am, pm, midnight, noon, teatime(就是下午 4 点)等口语词。 如果想要指定超过一天内的时间，则可以用 MMDDYY 或者 MM/DD/YY 的格式， 其中 MM 是月份，DD 是第几日，YY是指年份。另外，使用者甚至也可以使用是 now + 时间间隔来弹性指定时间，其中的时间间隔可以是 minutes, hours,days, weeks 另外，使用者也可指定 today 或 tomorrow 来表示今天或明天。当指定了时间并按下 enter 之后，at会进入交谈模式并要求输入指令或程式，当你输入完后按下 ctrl+D 即可完 成所有动作。 范例 :

    三天后的下午 5 点钟执行 /bin/ls : at 5pm + 3 days /bin/ls
    三个星期后的下午 5 点执行 /bin/ls : at 5pm + 2 weeks /bin/ls
    明天的 17:20 执行 /bin/date : at 17:20 tomorrow /bin/date
    1999 年的最后一天的最后一分钟印出 hello world ! at 23:59 12/31/1999 hello world !

crontab （在固定时间或固定间隔执行）

格式 : crontab [ -u user ] filecrontab [ -u user ] { -l | -r | -e } cmd 说明 : crontab 是用来在固定时间或固定间隔执行程序。 -u user 设定指定user 的时间表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user ，就是表示设定自己的时间表。 参数 : -e : 执行文字编辑器来设定时程表，默认的文字编辑器是 VI -r : 删除当前的时程表 -l : 列出当前的时程表 时程表的格式如下 : f1 f2 f3 f4 f5 program 其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天（0~6，0为星期天）。cmd 表示要执行的程序。 当 f1 为 * 时表示每分钟都要执行，f2 为 * 时表示每小时都要执行，其余类推； 当 f1 为 a-b 时，表示从第 a 分钟到第 b 分钟这段时间内要执行，f2为 a-b 时，表示从第 a 到第 b小时都要执行，其余类推； 当 f1 为 */n 时，表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示，每n 小时个时间间隔执行一次，其余类推； 当 f1 为 a, b, c,... 时，表示第 a, b, c,... 分钟要执行，f2 为 a, b, c,... 时表示，第 a, b, c...个小时要执行，其余类推； 使用者也可以将所有的设定先存放在文件 file 中，用 crontab file 的方式来设定时间表。 范例 :

    每月每天每小时的第 0 分钟执行一次 /bin/ls :
    * * * * /bin/ls

2. 在 12 月内, 每天的早上 6 点到 12 点中，每隔 20 分钟执行一次 /usr/bin/backup :

    /20 6-12 * 12 * /usr/bin/backup
    周一到周五每天下午 5:00 执行一次 /bin/ls :
    17 * * 1-5 /bin/ls
    每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分....执行 echo "haha"
    0-23/2 * * * echo "haha"

其他命令
if 条件判断

1 字符串判断

str1 = str2　　　　　　当两个串有相同内容、长度时为真
str1 = str2　　　　　 当串str1和str2不等时为真
-n str1　　　　　　　 当串的长度大于0时为真(串非空)
-z str1　　　　　　　 当串的长度为0时为真(空串)
str1　　　　　　　　 当串str1为非空时为真

2 数字的判断

int1 -eq int2　　　　两数相等为真
int1 -ne int2　　　　两数不等为真
int1 -gt int2　　　　int1大于int2为真
int1 -ge int2　　　　int1大于等于int2为真
int1 -lt int2　　　　int1小于int2为真
int1 -le int2　　　　int1小于等于int2为真

3 文件的判断

-r file　　　　　用户可读为真
-w file　　　　　用户可写为真
-x file　　　　　用户可执行为真
-f file　　　　　文件为正规文件为真
-d file　　　　　文件为目录为真
-c file　　　　　文件为字符特殊文件为真
-b file　　　　　文件为块特殊文件为真
-s file　　　　　文件大小非0时为真
-t file　　　　　当文件描述符(默认为1)指定的设备为终端时为真

3 复杂逻辑判断

-a 　 　　　　　 与
-o　　　　　　　 或
!　　　　　　　　非
hostname

hostname命令可以获取当前测试机器的名称, 远程获得其他机器的名称, 可以使用ssh 机器名 "hostname"

hostname -i可以获得当前测试机的ip地址, 远程获得, 和上面类似

nohup(在后台启动程序)

如果我们直接运行命令, 它是在前台执行的, 如果在末尾加上&, 则程序会到后台执行. 但是如果我们的secureCRT断开了连接, 这个进程还是会挂掉.

如果使用nohup 命令名称 &这样的形式, 则断开连接, 进程也会依旧执行, 同时, 打印的内容会存入nohup.out文件中

screen(在后台启动程序)

更加强大, 参见http://www.ibm.com/developerworks/cn/linux/l-cn-screen/

rz/sz(在windows机器和测试机器之间进行文件上传和下载, securecrt提供) 
########################################################################################################################
Linux三剑客之awk
指导博客地址：http://blog.csdn.net/Borenbao/article/details/1191402
对于awk，一行就是一个记录，一个记录有若干字段。
FS：表示字段分隔符
RS：记录分割符
NF：字段数量
NR:记录的数量
参数：
-F参数：指定分隔符，可指定一个或多个.默认空格分隔eg:'[ ,]'空格和逗号作为分隔符
BEGIN的作用是在处理第一条记录之前将BEGIN后面大括号之内的动作运行且只运行一次，也就是BEGIN匹配第一个输入记录之前。
END的作用是在处理完最后一条记录之后将END后面大括号之内的动作运行且只运行一次，也就是说，END匹配最后一个输入记录之后。
例：awk ‘$1>5{ print $0 }’ file0
其结果是把文件file0中第一个字段大于5的所有行打印出来。
 通常，为了将一个匹配限制在一个特定的域上，可以使用匹配操作符~（匹配）和！~（不匹配）。
如：awk '$2 ~ /Asia/ { print $0 }' file0
将把文件file0中第二个字段是字符串Asia的行全部打印出来。

而：awk '$2 ！~ /Asia/ { print $0 }' file0
    将把文件file0中第二个字段不是字符串Asia的行全部打印出来。
 在正则表达式中，符号 /  ^  $  .  [  ]  *  ?  (  ) 是元字符,这些元字符象UNIX Shell中的元字符一样有特殊的含义。例如，元字符“^”和“$”分别匹配字符串的开始和结束，而元字符“.”匹配任意单个字符。如 /^.$/ 将匹配所有只包含一个字符的输入行。 
 由括号括起来的一组字符，表示匹配其中的任何一个字符。如/{ABC}/与那些无论在什么地方包含A，B，C中任一字符的记录相匹配。
    多个字符或数字可以在括号内采用缩写形式：/[a-z]/，它与所有纯小写字母字符串相匹配。
/^[0-9]+$/匹配所有以数字开头的字符串。
在元字符的前面加上一个“/”，就可以关闭元字符的特殊含义。这样，/b/$/匹配所有包含b$这两个字符的行。

---------------------------------------------------------------------------------------------------------------------
Linux三剑客之grep
-f file:grep -f a.txt b.txt 就是将a.txt的内容作为模板，去匹配b.txt中的内容，如果匹配就打印出来，如果不匹配就不输出
-e :指定字符串做为查找文件内容的范本样式。
-r :当指定要查找的是目录而非文件时，必须使用这项参数 grep '123456' . -r 搜索当前目录下所有文件
-n :在显示符合范本样式的那一列之前，标示出该列的列数编号。
-v :翻转查找
-w或--word-regexp   只显示全字符合的列。
-x或--line-regexp   只显示全列符合的列
-l或--file-with-matches   列出文件内容符合指定的范本样式的文件名称。
-L或--files-without-match   列出文件内容不符合指定的范本样式的文件名称。
-h或--no-filename   在显示符合范本样式的那一列之前，不标示该列所属的文件名称。
-H或--with-filename   在显示符合范本样式的那一列之前，表示该列所属的文件名称。(默认就是大H)
-i :忽略大小写

Linux三剑客之sed
指导文章：http://www.cnblogs.com/ctaixw/p/5860221.html
sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，
处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。
Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等

-n:只打印匹配的行 例如：sed -n '2p' 1.txt 只打印第二行  sed '2p' 1.txt 第二行多打印一遍，默认全部打印
实例：
sed -n '2p' 1.txt 打印第二行
sed -n '1,3p' 1.txt 打印第一到第三行
sed -n '/6/p' 1.txt 打印匹配的行
sed -n '/first/,4p' 1.txt 打印匹配first的行到第四行，如果匹配的在第四行之后，则只打印匹配行
sed -n '2,/nihaow/p' 1.txt 打印从第二行开始到匹配的行
sed -n '/data/,/last/p' 1.txt 打印既匹配data又匹配last的行

sed -i '2d' 1.txt 删除第二行内容
sed -i '2a nihao' 1.txt 在第二行后边添加nihao 
sed -i 's/查找字符串/要替换成的字符串/'  1.txt  只替换匹配的第一个
sed -i 's/查找字符串/要替换成的字符串/g' 1.txt 替换全部匹配的
sed -i '/查找字符串/i 新字符串' 1.txt 行前插入
sed -i '/查找字符串/a 新字符串' 1.txt 行后插入
sed -i 'N;4a 新字符串' 1.txt 第四行后边插入
sed -i 'N;4i xxxxx' 1.txt 第四行插入
